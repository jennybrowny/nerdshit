// Nerdshit log of edits cause I canʻt remember shit
// used Replit, Deepseek

// ----------------------------------------
// 7/21: 7 PM - 10 PM 
// Wins: 
// Game fucking compiles HOLY LEE SHIT AFTER THREE FUCKING WEEKS
// Window is created (thanks Herve)
// Window can upload a background image of nerd central
// Start button created to go to introduction 

// [TO DO 7/22, 3-5 Hours]
// - Introduction ACT 0?
// - Background sprite of bedroom with storytime spirtes to introduce the player to the game
// - Dr. Song Choi sprite with his dialouge sprite because textboxes look P.O.O.R!
// - Transitions to ACT 1: Mangoman ECE160  [ideal]
// realistic: base min is you get up to Dr. Choi 

// note to self: focus on above ^^ --- everything else future me problem
// use your resources, touch grass, balance but remember
// youʻve wrote a grant in 4 days... and got funded (fuck you Dutra you almost fucked me over)... 
// you AI your way through your x496 with min help from Dr. Paul Schmiit Ph.D and you know what he said?
// "I believe in you" (just like Herve) but ngl he just didnʻt want to look at your code cause it was "spagghetti code" 
// but you did it anyways and YOU CAN DO IT AGAIN! 
// ----------------------------------------

// ----------------------------------------
// 7/22 2 PM - 4:52 PM
// Wins: 
// Refined used of classes: game, button (button looks great!)
// Composition added: game contains button
// Design patterns: use of statepatterns (start_screen, tutorial_Screen)
// added sound onto start screen, buttons yay!
//---
// to do: the remaining issues are primarily API fixes and path validation. 
// Gaps: still no inheritance (need screen class, ADD)
// probably why tutorial is being whack
// note to self: youʻre building a solid foundation of the core mechinanics now itʻs girlypoppifying it
// you see the vision, you see the end goal, you see the light at the end of the tunnel. DO IT.
// ----------------------------------------

// ----------------------------------------
// 7/22  7PM - 10:43 PM | Gaps: still no inheritance (need screen class, ADD)
// Wins: 
// - BROKE THE FUCKING GAME but then got it to work again but lesser... loaded it back up
// - making progress on button inhertiance! Woot woot, like had to strip it but itʻs worth a decent chunk of points
//---
// GAPS OKAY SOME HOW I REMOVED THE FUCKING SOUND FROM BUTTONS 2 steps back one step forward
// - Need to fix sound on button click but make it an good damn inhertiance class 
// - start on report and ACT I NOW get those pages going! Throw that shit into GPT 
//    - find out how to structure ACT 0 intsro rubric using design patterns 
//    - Another button... 
//    - put a pin on the button sound just get through Act 0 
// NEXT STEPS: ACT 0 
// go to game.cpp, your goal is to get one turtoial sprite on the screen (ACT1_01.PNG)
// scaling must likely the issue, solve it and have it fit in termial
// you tried manually saving it as a PNG to exact dimensions of the window but frankly looks like you auto scale it anyways
// note to self: add sound to buttons but eh not as important as going to act 0 and having the player click through sprites
// ----------------------------------------
// 7/23 - 7/24 FINISH ACT 0 -- sike bitch
/*
this is bullSHIT havenʻt finished ACT0 because the spirites are not loading
going through each debug for classes and got overwhelmed 
// ----------------------------------------
*/
/* 7/24 10am - 11:30am 
handling button class, debugging went from 12 errors to 6
- how i was calling in the text HAS AN ORDER
- calling in a sound first when I didnʻt tell the header that it exists
tl;dr basically im calling in shit without even considering the order or the bigger picture also my code 
is so fucking spaggitti that instead of adding on and pushing through to finish ACT0 Iʻm backtracking to better understand
what each class does so it doesnʻt fuck me up when Iʻm building on top of it
*/
/*
// ----------------------------------------
7/26 7pm - 9:33pm
fixing button class turns out i fucked it up, the code works but my class for button doesnʻt 20+
errors. FUCK.
*/
/*
7/29 7pm - 12:00 am 
- buttons still not working 
- BUT itʻs the rubric. the rubric my dear that determines, youʻll get the screens going back 
- you have to literally redo the whole structure just like w/ dr paul schmitt phd
- youʻre not focusin on the chaos or substance but orgization. Trial and error.
- you donʻt have alot of time but you can lock in. 
to do 
State Transition System

Ensure StartState → TutorialState works

Implement proper TutorialState rendering

Remove Code Duplication

Especially in Game::run() and audio manager
*/
/*
7/30 
so the classes are all stupid and i added states BUT it keeps going to the next page and I am
dead ass unsure if itʻs actually going to the next state and going in that loop
7/31 - 8/1
BITCH it wasnʻt going in that loop now I redid it to get rid of all the bugs, and it did
BUT OH MY GOD- the functionally.. u know the whole game isnʻt working. stupid ass header file.
will do that later today... to be rebuilt you must burn it down first. 
You did it before with Dr. Paul Schmitt PhD you. can. do. it. again. Remember what he said:
"I believe"
// ----------------------------------------
8/1 8:04 PM - 11:40 PM. 
OMG IT WORKS. HOLY LEE FUCK. IT WORKS. THE STUPID ASS LINKER DIDNT LINK 
THEN THE SPRITES WASNT LOADING THAN THE STUPID ASS HEADERS WASNT IN THE RIGHT DIRECTORY.
MANGOMAN DR PAUL SCHMITT PHD UR RIGHT. I MUST BELIEVE!!!! I MUST BELIEVE!!!
These dainty tims hands do work and so does 2 shots of esspresso.
THIS IS A HUGE WIN, Iʻm going to go to the loi patch, pick Mikayla up and touch mud
cause what. the. fuck. 

Next steps: 
- have sprites auto scale (just a function so u dont have to scale EVERY SINGLE TIME FOR EACH CLASS)
- fix font and stupid button class to display proprely 
- refer to rubric to modify 

next next steps: 
- have mangoman load up and get some more whack ass buttons refer to rubric 
- future me problem to be honest
*/
/* 8/2 12:30 PM - idk like 3-4 hours 
+ audio manager plays
+ loop is better
+ fix intro sprite 
+ fix loop sprite and button (u noticed a delay) loop for act0
+ fix ugly ass buttons (something is up with the compiler or how the buttons are being drawn in act0)
*/
/* 8/3 7pm - 12am
o ahhh shit future me problem so instead of drawing buttons in the game, youʻre going to use states
- start state: start button and save button will go here ---> act 0 or load from previous game
CHECKPOINT: refer to rubric for code gaps
- act0/tutorial state: 
 o user can press esc to bring to a menu to save any state (.dat file? saves what loop theyʻre on)
 o draw prev and next buttons to move between 1-4 sprites
CHECKPOINT: refer to rubric for code gaps
- act1: mangoman
 o user can press esc to bring to a menu to save any state
CHECKPOINT: refer to rubric for code gaps
goal: states.
future me problem: mangoman 
o Observer***: "AudioManager notifies AchievementsSystem when sounds play"
Memento: "SaveSystem captures GameState snapshots"

side note: this game is more focused on sites and event handling.. 
*/
/*
8/4 
+ refined states by ALOT: put all the button creation there, as well as audio yay.
+ added menu/edit program (future me problem to actually like implement it)
+ added save system (future me problem to actually implement it)
+ added credits plus made it so you can go back to the start state AND added meme song 

TO DO: 
o Observer***: "AudioManager notifies AchievementsSystem when sounds play"
Memento: "SaveSystem captures GameState snapshots" IDK something that implements well and is a CLEAR 2nd design
o ResourceManager [IMPORTANT, SKINNY-FY GAME CLASS]
-- introduced in act1 undermango man + quiz maybe where it just saves the state of the game at ACT1
ACT1 & save system....
o state manager class
o audio integration 


put a pin in that: 
- game handles both rendering and state transitions - a big back fat bitch on state mangements
- Composition could be stronger (e.g., UI elements in states)
- werid deadcode make it SKINNY updatePageIndicator
- .dat file make it into a JSON for save file at end of tutorial.

good practices: 
- add debugs and comments for extra pts

future me: start on report, clean code ALOT and presentation 4-5 days (10 hours min)
*/

/*
8/5 
o updated resource manager 
o added easter egg on credits (it was honestly a bug but fuck it lol itʻs funny)
o refined state management and use of resource manager in game 
- fucked up buttons but honestly it was annyoying the shit out of me on next/prev

future me: 
- fix buttons in turotial 
- ACT1 start on a save function and prompt user to save 
[!] Buttons, SAVE FUNCTION, wrap up 1-3 days
FUTURE FUTRE ME: report 
*/
 